kubectl apply -f zap-logger-config.yaml
kubectl apply -f gorm-logger-config.yaml

kubectl apply -f all-configmap.yaml

kubectl apply -f user-deployment.yaml
kubectl apply -f user-service.yaml

kubectl apply -f department-deployment.yaml
kubectl apply -f department-service.yaml

kubectl apply -f point-deployment.yaml
kubectl apply -f point-service.yaml

kubectl apply -f postgres-pvc.yaml
kubectl apply -f postgres-secret.yaml
kubectl apply -f postgres-configmap.yaml

kubectl apply -f postgres-deployment.yaml
kubectl apply -f postgres-service.yaml



kubectl get pods
kubectl get services
minikube service user-service



curl -L https://istio.io/downloadIstio | sh -
cd istio-*
export PATH=$PWD/bin:$PATH

istioctl install --set profile=default -y
 kubectl label namespace default istio-injection=enabled



set -o allexport
source .env_local
set +o allexport

echo $DATABASE_URL

 eval $(minikube docker-env)



envsubst < helm-charts/common/values.yaml | helm upgrade common helm-charts/common -f - 
envsubst < helm-charts/postgres/values.yaml | helm upgrade postgres helm-charts/postgres -f - 

helm upgrade point-service helm-charts/point-service
helm upgrade user-service helm-charts/user-service
helm upgrade department-service helm-charts/department-service


kubectl apply -f https://github.com/bitnami-labs/sealed-secrets/releases/download/v0.29.0/controller.yaml

wget "https://github.com/bitnami-labs/sealed-secrets/releases/download/v0.29.0/kubeseal-0.29.0-linux-amd64.tar.gz"
tar -xvzf kubeseal-0.29.0-linux-amd64.tar.gz kubeseal
sudo install -m 755 kubeseal /usr/local/bin/kubeseal

kubectl create secret generic my-secrets --from-env-file=.env_local --dry-run=client -o json | \
kubeseal --format yaml --cert my-sealed-secrets-public-key.pem > helm-charts/common/templates/sealedsecret.yaml


point GRPC
          livenessProbe:
            grpc:
              port: {{ .Values.containerPort }}   
            initialDelaySeconds: {{ .Values.initialDelaySeconds }}
            periodSeconds: {{ .Values.periodSeconds }}
          readinessProbe:
            grpc:
              port: {{ .Values.containerPort }}   
            initialDelaySeconds: {{ .Values.initialDelaySeconds }}
            periodSeconds: {{ .Values.periodSeconds }}