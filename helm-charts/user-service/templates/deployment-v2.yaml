apiVersion: apps/v1
kind: Deployment
metadata:
  name: user-service-2
  labels:
    app: user-service
    version: v2
spec:
  replicas:  1
  selector:
    matchLabels:
      app: user-service
      version: v2
  template:
    metadata:
      labels:
        app: user-service
        version: v2
    spec:
      containers:
        - name: user-service
          image: "user-service:latest"
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8185
          livenessProbe:
            httpGet:
              path: /health
              port: 8185
            initialDelaySeconds: 5
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /ready
              port: 8185
            initialDelaySeconds: 5
            periodSeconds: 10
          resources:
            requests:
              memory: "64Mi"
              cpu: "250m"
            limits:
              memory: "128Mi"
              cpu: "500m"
          envFrom:
            - configMapRef:
                name: all-service-config
            - secretRef:
                name: all-service-secret
          volumeMounts:
            - name: zap-config
              mountPath: /config/zap-logger-config.json
              subPath: zap-logger-config.json
            - name: gorm-config
              mountPath: /config/gorm-logger-config.json
              subPath: gorm-logger-config.json
      volumes:
        - name: zap-config
          configMap:
            name: zap-logger-config
            items:
              - key: zap-logger-config.json
                path: zap-logger-config.json
        - name: gorm-config
          configMap:
            name: gorm-logger-config
            items:
              - key: gorm-logger-config.json
                path: gorm-logger-config.json
